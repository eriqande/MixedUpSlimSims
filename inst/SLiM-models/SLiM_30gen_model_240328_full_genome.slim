initialize() {
	initializeSLiMOptions(keepPedigrees=T); // turn on pedigree tracking; see section 25 of the manual (25.7, pg. 679)
	defineConstant("L", 1949962539); // length of genome
	initializeTreeSeq();
	initializeMutationRate(0); // zero mutations forward-in-time; will be added by msprime afterwards
	initializeMutationType("m1", 0.5, "f", 0.0); // neutral mutations, but won't be used anyways
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, L-1);

	 // set up 29 trout chromosomes with not much recombination within them
    ends = c(84884017, 84884018, 170364868, 170364869, 255302337, 255302338, 340358758, 340358759, 432561311, 432561312, 515492034, 515492035, 595255810, 595255811, 679034094, 679034095, 747501830, 747501831, 818558021, 818558022, 898836325, 898836326, 988491333, 988491334, 1054543576, 1054543577, 1134902301, 1134902302, 1198270468, 1198270469, 1269166547, 1269166548, 1345694384, 1345694385, 1407413604, 1407413605, 1466989977, 1466989978, 1508401989, 1508401990, 1560331576, 1560331577, 1608881719, 1608881720, 1657923568, 1657923569, 1698286047, 1698286048, 1780887703, 1780887704, 1821070223, 1821070224, 1866387099, 1866387100, 1907331003, 1907331004, 1949962539);
    rates = c(1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09, 0.5, 1e-09);
    initializeRecombinationRate(rates, ends);
    initializeSex("A"); //Make all chromosomes autosomal
}
1 late() {
	//make two pops, with ongoing gene flow until the end of the simulation
	sim.addSubpop("p1", 100); // rainbow trout population
	sim.addSubpop("p2", 900); // westslope population
	sim.treeSeqRememberIndividuals(sim.subpopulations.individuals); // retains first-gen p1 and p2 individuals to determine genomic region population-of-origin; automatically recorded by default, but doesn't hurt to keep explicitly
	p1.setMigrationRates(p2, 0.005); // migration rate into p1
	p2.setMigrationRates(p1, 0.02); // migration rate into p2
}
29 late() {
	sim.treeSeqRememberIndividuals(sim.subpopulations.individuals); // retains individual information so we can get their data as grandparents of the final generation
}
30 late() {
	sim.treeSeqRememberIndividuals(sim.subpopulations.individuals); // retains individual information so we can get their data as parents of the final generation
}
31 late() {
	sim.treeSeqOutput("30_gens_full_genome.trees"); // after 30 gens of mixing/interbreeding, write out trees
}

